variables:
  PLATFORM: linux/amd64,linux/arm64
  REGISTRY_IMAGE_TAG: "$CI_COMMIT_TAG"
  K8S_NAMESPACE: extensions
  K8S_CHART_NAME: a11y-checker
  HELM_CHART_PATH: "${CI_PROJECT_DIR}/deploy/${K8S_CHART_NAME}"
  CI_REGISTRY_IMAGE_WEB: "$CI_REGISTRY_IMAGE/web"
  CI_REGISTRY_IMAGE_EXECUTOR: "$CI_REGISTRY_IMAGE/executor"
  IMAGE_TAG_WEB: "$CI_REGISTRY_IMAGE_WEB:$CI_COMMIT_TAG"
  IMAGE_TAG_EXECUTOR: "$CI_REGISTRY_IMAGE_EXECUTOR:$CI_COMMIT_TAG"

stages:
- publish
- deploy

.buildx-install:
  before_script:
    - echo "${CI_JOB_TOKEN}" | docker login -u gitlab-ci-token --password-stdin "${CI_REGISTRY}"
    - docker buildx create --name multiarch_builder --driver docker-container --use
      --platform ${PLATFORM}
    - docker buildx ls

publish:tag:web:
  extends: .buildx-install
  stage: publish
  tags:
  - dockermultistage
  image: docker
  script:
  - docker buildx build --file ./packages/web2/Dockerfile -t "${IMAGE_TAG_WEB}" --push .
  rules:
  - if: "$CI_COMMIT_TAG != null && $CI_COMMIT_TAG =~ /^v[0-9]+(\\.[0-9]+){2,3}(-.+)?$/"
    when: on_success

publish:tag:executor:
  extends: .buildx-install
  stage: publish
  tags:
    - dockermultistage
  image: docker
  script:
    - docker buildx build --file ./packages/executor/Dockerfile -t "${IMAGE_TAG_EXECUTOR}" --push .
  rules:
    - if: "$CI_COMMIT_TAG != null && $CI_COMMIT_TAG =~ /^v[0-9]+(\\.[0-9]+){2,3}(-.+)?$/"
      when: on_success

deploy:tag:prod:
  environment: production
  stage: deploy
  tags:
  - prod
  - helm
  before_script:
  - helm version
  script:
  - 'helm upgrade --install ${K8S_CHART_NAME} --namespace ${K8S_NAMESPACE}
    -f ${HELM_CHART_PATH}/values.prod.yaml 
    --set webApp.image.repository=${CI_REGISTRY_IMAGE_WEB}
    --set webApp.image.tag=${REGISTRY_IMAGE_TAG} 
    --set executor.image.repository=${CI_REGISTRY_IMAGE_EXECUTOR}
    --set executor.image.tag=${REGISTRY_IMAGE_TAG}
    --set extensionSecret=${EXTENSION_SECRET}
    ${HELM_CHART_PATH}
    '
  rules:
  - if: "$CI_COMMIT_TAG != null && $CI_COMMIT_TAG =~ /^v[0-9]+(\\.[0-9]+){2,3}(-.+)?$/"
    when: manual
